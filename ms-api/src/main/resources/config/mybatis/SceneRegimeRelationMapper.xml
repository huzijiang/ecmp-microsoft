<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hq.ecmp.mscore.mapper.SceneRegimeRelationMapper">

    <resultMap type="com.hq.ecmp.mscore.domain.SceneRegimeRelation" id="SceneRegimeRelationResult">
        <result property="sceneId"    column="scene_id"    />
        <result property="regimenId"    column="regimen_id"    />
    </resultMap>

    <sql id="selectSceneRegimeRelationVo">
        select scene_id, regimen_id from scene_regime_relation
    </sql>

    <select id="selectSceneRegimeRelationList" parameterType="com.hq.ecmp.mscore.domain.SceneRegimeRelation" resultMap="SceneRegimeRelationResult">
        <include refid="selectSceneRegimeRelationVo"/>
        <where>
            <if test="sceneId != null "> and scene_id = #{sceneId}</if>
            <if test="regimenId != null "> and regimen_id = #{regimenId}</if>
        </where>
    </select>

    <select id="selectSceneRegimeRelationById" parameterType="Long" resultMap="SceneRegimeRelationResult">
        <include refid="selectSceneRegimeRelationVo"/>
        where scene_id = #{sceneId}
    </select>

    <insert id="insertSceneRegimeRelation" parameterType="com.hq.ecmp.mscore.domain.SceneRegimeRelation">
        insert into scene_regime_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sceneId != null ">scene_id,</if>
            <if test="regimenId != null ">regimen_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sceneId != null ">#{sceneId},</if>
            <if test="regimenId != null ">#{regimenId},</if>
         </trim>
    </insert>

    <update id="updateSceneRegimeRelation" parameterType="com.hq.ecmp.mscore.domain.SceneRegimeRelation">
        update scene_regime_relation
        <trim prefix="SET" suffixOverrides=",">
            <if test="regimenId != null ">regimen_id = #{regimenId},</if>
        </trim>
        where scene_id = #{sceneId}
    </update>

    <delete id="deleteSceneRegimeRelationById" parameterType="Long">
        delete from scene_regime_relation where scene_id = #{sceneId}
    </delete>

    <delete id="deleteSceneRegimeRelationByIds" parameterType="String">
        delete from scene_regime_relation where scene_id in
        <foreach item="sceneId" collection="array" open="(" separator="," close=")">
            #{sceneId}
        </foreach>
    </delete>

    <select id="selectRegimenIdsBySceneId" resultType="java.lang.Long" parameterType="long">
        select regimen_id from scene_regime_relation where scene_id = #{sceneId}
    </select>
    
    <delete id="deleteSceneRegimeRelationByRegimeId" parameterType="Long">
    delete from scene_regime_relation where regimen_id = #{regimeId}
    </delete>

</mapper>
