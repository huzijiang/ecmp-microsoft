<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hq.ecmp.mscore.mapper.OrderAccountInfoMapper">

    <resultMap type="com.hq.ecmp.mscore.domain.OrderAccountInfo" id="OrderAccountInfoResult">
        <result property="accountId"    column="account_id"    />
        <result property="billId"    column="bill_id"    />
        <result property="orderId"    column="order_id"    />
        <result property="costCenter"    column="cost_center"    />
        <result property="projectId"    column="project_id"    />
        <result property="state"    column="state"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectOrderAccountInfoVo">
        select account_id, bill_id, order_id, cost_center, project_id, state, create_by, create_time, update_by, update_time from order_account_info
    </sql>

    <select id="selectOrderAccountInfoList" parameterType="com.hq.ecmp.mscore.domain.OrderAccountInfo" resultMap="OrderAccountInfoResult">
        <include refid="selectOrderAccountInfoVo"/>
        <where>
            <if test="billId != null "> and bill_id = #{billId}</if>
            <if test="orderId != null  and orderId != ''"> and order_id = #{orderId}</if>
            <if test="costCenter != null "> and cost_center = #{costCenter}</if>
            <if test="projectId != null "> and project_id = #{projectId}</if>
            <if test="state != null  and state != ''"> and state = #{state}</if>
        </where>
    </select>

    <select id="selectOrderAccountInfoById" parameterType="Long" resultMap="OrderAccountInfoResult">
        <include refid="selectOrderAccountInfoVo"/>
        where account_id = #{accountId}
    </select>

    <insert id="insertOrderAccountInfo" parameterType="com.hq.ecmp.mscore.domain.OrderAccountInfo">
        insert into order_account_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accountId != null ">account_id,</if>
            <if test="billId != null ">bill_id,</if>
            <if test="orderId != null  and orderId != ''">order_id,</if>
            <if test="costCenter != null ">cost_center,</if>
            <if test="projectId != null ">project_id,</if>
            <if test="state != null  and state != ''">state,</if>
            <if test="createBy != null ">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateBy != null ">update_by,</if>
            <if test="updateTime != null ">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="accountId != null ">#{accountId},</if>
            <if test="billId != null ">#{billId},</if>
            <if test="orderId != null  and orderId != ''">#{orderId},</if>
            <if test="costCenter != null ">#{costCenter},</if>
            <if test="projectId != null ">#{projectId},</if>
            <if test="state != null  and state != ''">#{state},</if>
            <if test="createBy != null ">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateBy != null ">#{updateBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateOrderAccountInfo" parameterType="com.hq.ecmp.mscore.domain.OrderAccountInfo">
        update order_account_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="billId != null ">bill_id = #{billId},</if>
            <if test="orderId != null  and orderId != ''">order_id = #{orderId},</if>
            <if test="costCenter != null ">cost_center = #{costCenter},</if>
            <if test="projectId != null ">project_id = #{projectId},</if>
            <if test="state != null  and state != ''">state = #{state},</if>
            <if test="createBy != null ">create_by = #{createBy},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateBy != null ">update_by = #{updateBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
        </trim>
        where account_id = #{accountId}
    </update>

    <delete id="deleteOrderAccountInfoById" parameterType="Long">
        delete from order_account_info where account_id = #{accountId}
    </delete>

    <delete id="deleteOrderAccountInfoByIds" parameterType="String">
        delete from order_account_info where account_id in
        <foreach item="accountId" collection="array" open="(" separator="," close=")">
            #{accountId}
        </foreach>
    </delete>

    <select id="getAccountList" resultType="com.hq.ecmp.mscore.vo.OrderAccountVO">
        select createTime accountDate,ROUND(sum(amount),2) amount from (SELECT DATE_FORMAT(create_time, '%Y-%m') createTime,amount from order_settling_info
        where bill_id in (select bill_id from order_account_info  where state='S008')) a group by a.createTime
    </select>

    <select id="getAccountViewList" resultType="com.hq.ecmp.mscore.vo.OrderAccountViewVO">
        select createTime accountDate,count(order_id) orderNum,ROUND(sum(amount),2) amount,ROUND(sum(out_price),2) amountOut from
        (SELECT DATE_FORMAT(create_time, '%Y-%m') createTime,amount,order_id,out_price from order_settling_info
        where bill_id in (select bill_id from order_account_info)) a group by a.createTime
    </select>

</mapper>
